#include <bits/stdc++.h>
#define ll long long int
using namespace std;

class FenwickTree {
private:
    vector<ll> tree;
    int MaxVal;
public:
    FenwickTree(int size) {
        MaxVal = size;
        tree.resize(size + 1, 0);
    }

    void update(int idx, ll val) {
        while (idx <= MaxVal) {
            tree[idx] += val;
            idx += (idx & -idx);
        }
    }

    ll read(int idx) {
        ll sum = 0;
        while (idx > 0) {
            sum += tree[idx];
            idx -= (idx & -idx);
        }
        return sum;
    }
};

int main() {
    int n, q;
    cin >> n >> q;
    FenwickTree bit(n);
    for (int i = 1; i <= n; ++i) {
        int val;
        cin >> val;
        bit.update(i, val);
        bit.update(i + 1, -val); 
    }

    while (q--) {
        int p;
        cin >> p;
        if (p == 1) { 
            int l, r;
            ll val;
            cin >> l >> r >> val;
            bit.update(l, val);
            bit.update(r + 1, -val);
        } else {  
            int k;
            cin >> k;
            ll vall = bit.read(k);
            cout << vall << endl;
        }
    }

    return 0;
}
